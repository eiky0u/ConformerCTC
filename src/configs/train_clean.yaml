defaults:
  - model: conformer
  - metrics: ctc
  - datasets: training_clean
  - dataloader: training
  - transforms: training
  - _self_
writer:
  _target_: src.logger.CometMLWriter
  project_name: "Conformer_CTC"
  workspace: null
  run_name: "clean-training"
  mode: "online"
  loss_names: ["loss"] # which losses to log (useful for multi-loss tasks, s.a. GANs)
  log_checkpoints: False # set to True if you want to log save_dir with checkpoints to W&B
  id_length: 32 # length of the run_id
optimizer:
  _target_: torch.optim.AdamW
  lr: 3e-4                
  betas: [0.9, 0.98]
  eps: 1e-8
  weight_decay: 0.01
lr_scheduler:
  _target_: torch.optim.lr_scheduler.OneCycleLR
  max_lr: 3e-4            
  pct_start: 0.1          
  anneal_strategy: cos     
  div_factor: 10.0         
  final_div_factor: 100.0  
  epochs: ${trainer.n_epochs}
  three_phase: false
loss_function:
  _target_: src.loss.CTCLossWrapper
text_encoder:
  _target_: src.text_encoder.CTCBPETextEncoder
  pretrained_name: "openai/whisper-small"
  lowercase: False
  # add_prefix_space: False
trainer:
  log_step: 50
  n_epochs: 11
  # epoch_len: None
  use_amp: True
  amp_dtype: "fp16"
  scaler:
    _target_: torch.cuda.amp.GradScaler  
  grad_clip: 5.0
  device_tensors: ["spectrogram", "spectrogram_length", "text_encoded", "text_encoded_length"] # which tensors should be on device (ex. GPU)
  resume_from: null # null or path to the checkpoint dir with *.pth and config.yaml
  device: auto # device name or "auto"
  override: True # if True, will override the previous run with the same name
  monitor: "min val_WER_(Argmax)" # "off" or "max/min metric_name", i.e. our goal is to maximize/minimize metric
  save_period: 5 # checkpoint each save_period epochs in addition to the best epoch
  early_stop: ${trainer.n_epochs} # epochs for early stopping
  save_dir: "saved"
  seed: 1
